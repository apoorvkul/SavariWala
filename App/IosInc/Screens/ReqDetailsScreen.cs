// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SavariWala.Common;
using System.Collections.Generic;
using SavariWala;

namespace Savariwala.Ios
{
	public partial class ReqDetailsScreen : UITableViewController
	{
		public ReqDetailsScreen (IntPtr handle) : base (handle)
		{
		}

		public override void LoadView ()
		{
			base.LoadView ();

			AppCommon.Inst.CurrentReq.StartTime = DateTime.Now.AddMinutes (0);
			TxtTimeStart.Text = DateTime.Now.TimeOfDay.ToString ("c").Substring (0, 5) +
				"(0 mins from now)";

			TxtTimeStart.Ended += (sender, e) => Utils.AlertOnEx (
				"Invalid Input", "Please enter valid entries", 
				() => AppCommon.Inst.CurrentReq.StartTime = DateTime.Parse (TxtTimeStart.Text));
				
			AppCommon.Inst.CurrentReq.Details.NumPax = 1;
			TxtNumPax.Text = "1";
			TxtNumPax.Ended += (s, e) => Utils.AlertOnEx (
				"Invalid Input", "Please enter valid entries", 
				() => AppCommon.Inst.CurrentReq.Details.NumPax = int.Parse(TxtNumPax.Text));
				
			TxtDest.ValueChanged += (s, e) => AutoCompletePlaces (TxtDest, TblAutoComplete);
			TxtDest.Ended += (s, e) => DestEntered (TxtDest.Text, TblAutoComplete);
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			TxtDest.BecomeFirstResponder ();
		}

		void DestEntered (string dst, UITableView tblAutoComplete)
		{
			tblAutoComplete.Hidden = true;
			var curLoc = AppCommon.Inst.LocationProvider.CurLocInfo.Value.Loc;
			AppCommon.Inst.PlacesProvider.SearchAsync (
				x => InvokeOnMainThread (() => ShowSearchResults (x, tblAutoComplete)), 
				dst, curLoc.Lat, curLoc.Lng);
		}

		abstract class TblSourceBase<T> : UITableViewSource
		{
			public List<T> Entries { get; set; }
			public Action<T> Selected { get; set; }

			public override int RowsInSection (UITableView tableView, int section)
			{
				return Entries.Count;
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				UITableViewCell cell = tableView.DequeueReusableCell ("PlaceAutoCompCell") ??
					new UITableViewCell (UITableViewCellStyle.Default, "PlaceAutoCompCell");
				FillCell(cell, Entries[indexPath.Row]);
				return cell;
			}

			public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
			{
				Selected (Entries [indexPath.Row]);
			} 

			protected abstract void FillCell (UITableViewCell cell, T item);
		}

		class AutoCompleteSourceBase : TblSourceBase<string>
		{
			protected override void FillCell (UITableViewCell cell, string item)
			{
				cell.TextLabel.Text = item;
			}
		}

		class DestResultsSourceBase : TblSourceBase<MapPoint>
		{
			protected override void FillCell (UITableViewCell cell, MapPoint item)
			{
				cell.TextLabel.Text = item.Name;
			}
		}

		protected void OnItemClicked (MapPoint place)
		{
			AppCommon.Inst.Destination = place.Loc;
			//AppDelegate.Inst.StoryBoard.InstantiateViewController()
		}

		void ShowSearchResults (List<MapPoint> results, UITableView tblAutoComplete)
		{
			tblAutoComplete.Hidden = false;
			tblAutoComplete.Source = new DestResultsSourceBase { Entries = results, Selected = OnItemClicked };
		}

		void AutoCompletePlaces (UITextField txtDest, UITableView tblAutoComplete)
		{
			var curLoc = AppCommon.Inst.LocationProvider.CurLocInfo.Value.Loc;
			AppCommon.Inst.PlacesProvider.AutoCompleteAsync (
				lst => InvokeOnMainThread(() => {
					tblAutoComplete.Hidden = false;
					tblAutoComplete.Source = new AutoCompleteSourceBase { 
						Entries = lst, 
						Selected = x => txtDest.Text = x
					};
				}), txtDest.Text, txtDest.Text.Length, curLoc.Lat, curLoc.Lng);
		}
	}
}
